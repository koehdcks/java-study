
public class Ex2_3 {
	public static void main(String[] args) {
		/*기본형 - 논리형(boolean),문자형(char),정수형(byte,short,int,long),실수형(float,double)
		 * 계산을 위한 실제 값을 저장한다. 모두 8개
		 * 4개의 정수형중에서 int형이 기본 자료형이며, 실수형중에서는 double이 기본 자료형이다.
		 * 1byte-boolean,byte / 2byte-char,short / 4byte-int,float / 8byte-long,double
		 * 
		 *참조형 - 객체의 주소를 저장한다. 8개의 기본형을 제외한 나머지 타입
		 *참조형 변수를 선언할 때는 변수의 타입으로 클래스의 이름을 사용한다.
		 *참조변수를 선언하는 방법: 클래스이름 변수이름; //변수의 타입이 기본형이 아닌 것들은 모두 참조변수이다.
		 *
		 *상수 - 상수(constant)는 변수와 마찬가지로 값을 저장할 수 있는 공간이지만, 변수와 달리 한 번 값을 저장하면 다른 값으로 변경할 수 없다.
		 *상수를 선언하는 방법은 변수와 동일하며, 단지 변수의 타입 앞에 키워드'final'을 붙여주기만 하면 된다.//final int MAX_SPEED = 10;
		 *그리고 상수는 선언과 동시에 초기화해야 하며, 그 후 부터는 상수의 값을 변경하는 것이 허용되지 않는다.
		 *상수의 이름은 모두 대문자로 하는 것이 암묵적인 관례이며, 여러 단어로 이루어져있는 경우'_'로 구분한다.
		 *
		 *리터럴 - 원래 12,123,3.14,'A'와 같은 값들이 '상수'인데, 프로그래밍에서는 '상수'를 값을 한 번 저장하면 변경할 수 없는
		 *저장공간으로 정의하였기 때문에 상수대신 리터럴이라는 용어를 사용한다. 리터럴은 단지 우리가 기존에 알고 있던 '상수'의 다른 이름일 뿐이다.
		 *정수형의 경우 long타입의 리터럴에 접미사 'l' 또는 'L'을 붙이고, 접미사가 없으면 int타입의 리터럴이다.
		 *10진수 외에도 2,8,16진수로 표현된 리터럴을 변수에 저장할 수 있으며, 16진수라는 것을 표시하기 위해 리터럴 앞에
		 *'0x'또는'0X'를,8진수의 경우에는'0'을 붙인다.
		 *실수형에서는 float타입의 리터럴에 접미사'f'또는'F'를 붙이고,double타입의 리터럴에는 접미사'd'또는'D'를 붙인다.
		 *double이 기본 자료형이므로 접미사'd'는 생략이 가능하다. 실수형 리터럴인데 접미사가 없으면 double타입 리터럴인 것이다.
		 *리터럴의 타입은 저장될 변수의 타입과 일치하는 것이 보통이지만, 
		 *타입이 달라도 저장범위가 넓은 타입에 좁은 타입의 값을 저장하는 것은 허용된다.
		 *'A'와 같이 작은따옴표로 문자 하나를 감싼 것을 '문자 리터럴', 두 문자 이상은 큰 따옴표로 감싸야 하며'문자열 리터럴'이라고 한다.
		 *그리고 덧셈 연산자를 이용하여 문자열을 결합할 수 있다. 덧셈 연산자는 피연산자가 모두 숫자일 때는 두 수를 더하지만,
		 *피연산자 중 어느 한쪽이 String이면 나머지 한 쪽을 먼저 String으로 변환한 다음 두 String을 결합한다.
		 *기본형과 참조형의 구별 없이 어떤 타입의 변수도 문자열과 덧셈연산을 수행하면 그 겨로가가 문자열이 되는 것이다.
		 */
		String name = "Ja" + "va";
		String str  = name + 8.0;
		
		System.out.println(name);
		System.out.println(str);
		System.out.println(7 + " ");
		System.out.println(" " + 7);
		System.out.println(7 + "");
		System.out.println("" + 7);
		System.out.println("" + "");
		System.out.println(7 + 7 + "");
		System.out.println("" + 7 + 7);
		
		
	}
}
